%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_3Dvlt_quench_vsl_T_1_0.7_P_00.050_lmax1_dl0.001_tmax1_dt5e-07_BC1_GammaVsl.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Thu Jul  7 15:21:36 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_3Dvlt_quench_vsl_T_1_0.7_P_00.050_lmax1_dl0.001_tmax1_dt5e-07_BC1_GammaVsl.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (zero)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul  7 15:21:36 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
5967 0 V
stroke
LTb
1022 448 M
63 0 V
5904 0 R
-63 0 V
stroke
938 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MRshow
1.000 UL
LTb
1022 867 M
31 0 V
5936 0 R
-31 0 V
1022 1111 M
31 0 V
5936 0 R
-31 0 V
1022 1285 M
31 0 V
5936 0 R
-31 0 V
1022 1420 M
31 0 V
5936 0 R
-31 0 V
1022 1530 M
31 0 V
5936 0 R
-31 0 V
-5936 93 R
31 0 V
5936 0 R
-31 0 V
-5936 81 R
31 0 V
5936 0 R
-31 0 V
-5936 71 R
31 0 V
5936 0 R
-31 0 V
stroke
LTa
1022 1838 M
5967 0 V
stroke
LTb
1022 1838 M
63 0 V
5904 0 R
-63 0 V
stroke
938 1838 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
1022 2257 M
31 0 V
5936 0 R
-31 0 V
1022 2502 M
31 0 V
5936 0 R
-31 0 V
1022 2675 M
31 0 V
5936 0 R
-31 0 V
1022 2810 M
31 0 V
5936 0 R
-31 0 V
1022 2920 M
31 0 V
5936 0 R
-31 0 V
-5936 93 R
31 0 V
5936 0 R
-31 0 V
-5936 81 R
31 0 V
5936 0 R
-31 0 V
-5936 71 R
31 0 V
5936 0 R
-31 0 V
stroke
LTa
1022 3229 M
5967 0 V
stroke
LTb
1022 3229 M
63 0 V
5904 0 R
-63 0 V
stroke
938 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
1022 3647 M
31 0 V
5936 0 R
-31 0 V
1022 3892 M
31 0 V
5936 0 R
-31 0 V
1022 4066 M
31 0 V
5936 0 R
-31 0 V
1022 4200 M
31 0 V
5936 0 R
-31 0 V
1022 4311 M
31 0 V
5936 0 R
-31 0 V
-5936 93 R
31 0 V
5936 0 R
-31 0 V
-5936 80 R
31 0 V
5936 0 R
-31 0 V
-5936 71 R
31 0 V
5936 0 R
-31 0 V
stroke
LTa
1022 4619 M
5967 0 V
stroke
LTb
1022 4619 M
63 0 V
5904 0 R
-63 0 V
stroke
938 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
0 4171 V
stroke
LTb
1022 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1022 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2215 448 M
0 4171 V
stroke
LTb
2215 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2215 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3409 448 M
0 4171 V
stroke
LTb
3409 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3409 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4602 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
4602 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4602 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5796 448 M
0 3968 V
0 140 R
0 63 V
stroke
LTb
5796 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5796 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6989 448 M
0 4171 V
stroke
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6989 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1022 4619 N
0 -4171 V
5967 0 V
0 4171 V
-5967 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol-Oblique) 140.0 0.0 true true 0 (G)]
[(Helvetica) 140.0 0.0 true true 0 ( \(units...\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4005 98 M
[ [(Times-Italic) 140.0 0.0 true true 0 (l)]
[(Helvetica) 140.0 0.0 true true 0 ( \(unitless\))]
] -46.7 MCshow
LTb
4005 4829 M
[ [(Helvetica) 112.0 70.0 true true 0 (4)]
[(Helvetica) 140.0 0.0 true true 0 (He Vortex-Loop Distribution )]
[(Symbol-Oblique) 140.0 0.0 true true 0 (G)]
[(Helvetica) 140.0 0.0 true true 0 ( vs Loop Diameter Scale )]
[(Times-Italic) 140.0 0.0 true true 0 (l)]
] -60.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6338 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 ( t=0, BC1 1.00 to 0.7 of Tc )]
] -46.7 MRshow
LT0
6422 4486 M
399 0 V
1022 4063 M
60 -31 V
59 -31 V
60 -30 V
60 -31 V
59 -31 V
60 -31 V
60 -31 V
59 -32 V
60 -31 V
60 -31 V
59 -32 V
60 -31 V
60 -32 V
59 -32 V
60 -32 V
60 -32 V
59 -32 V
60 -32 V
60 -32 V
59 -32 V
60 -33 V
60 -32 V
59 -32 V
60 -33 V
60 -33 V
59 -32 V
60 -33 V
60 -33 V
59 -33 V
60 -33 V
60 -33 V
59 -33 V
60 -33 V
60 -34 V
59 -33 V
60 -33 V
60 -34 V
59 -33 V
60 -34 V
60 -33 V
59 -34 V
60 -34 V
60 -34 V
59 -33 V
60 -34 V
60 -34 V
59 -34 V
60 -34 V
60 -34 V
60 -34 V
59 -35 V
60 -34 V
60 -34 V
59 -34 V
60 -35 V
60 -34 V
59 -35 V
60 -34 V
60 -35 V
59 -34 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -36 V
60 -35 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -36 V
60 -35 V
59 -36 V
60 -35 V
60 -36 V
59 -35 V
60 -36 V
1022 4062 M
60 -30 V
stroke 1082 4032 M
59 -30 V
60 -31 V
60 -31 V
59 -31 V
60 -31 V
60 -31 V
59 -31 V
60 -32 V
60 -31 V
59 -32 V
60 -31 V
60 -32 V
59 -32 V
60 -32 V
60 -31 V
59 -32 V
60 -33 V
60 -32 V
59 -32 V
60 -32 V
60 -33 V
59 -32 V
60 -33 V
60 -33 V
59 -32 V
60 -33 V
60 -33 V
59 -33 V
60 -33 V
60 -33 V
59 -33 V
60 -33 V
60 -33 V
59 -34 V
60 -33 V
60 -34 V
59 -33 V
60 -34 V
60 -33 V
59 -34 V
60 -34 V
60 -33 V
59 -34 V
60 -34 V
60 -34 V
59 -34 V
60 -34 V
60 -34 V
60 -34 V
59 -35 V
60 -34 V
60 -34 V
59 -34 V
60 -35 V
60 -34 V
59 -35 V
60 -34 V
60 -34 V
59 -35 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -36 V
60 -35 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -36 V
60 -35 V
59 -36 V
60 -35 V
60 -36 V
59 -35 V
60 -38 V
1022 4059 M
60 -28 V
59 -30 V
60 -29 V
60 -31 V
stroke 1261 3941 M
59 -31 V
60 -31 V
60 -31 V
59 -31 V
60 -31 V
60 -32 V
59 -31 V
60 -32 V
60 -32 V
59 -31 V
60 -32 V
60 -32 V
59 -32 V
60 -32 V
60 -33 V
59 -32 V
60 -32 V
60 -33 V
59 -32 V
60 -33 V
60 -32 V
59 -33 V
60 -33 V
60 -33 V
59 -33 V
60 -33 V
60 -33 V
59 -33 V
60 -33 V
60 -34 V
59 -33 V
60 -33 V
60 -34 V
59 -33 V
60 -34 V
60 -33 V
59 -34 V
60 -34 V
60 -34 V
59 -34 V
60 -33 V
60 -34 V
59 -34 V
60 -34 V
60 -35 V
60 -34 V
59 -34 V
60 -34 V
60 -34 V
59 -35 V
60 -34 V
60 -35 V
59 -34 V
60 -34 V
60 -35 V
59 -35 V
60 -34 V
60 -35 V
59 -35 V
60 -34 V
60 -35 V
59 -35 V
60 -35 V
60 -34 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -35 V
59 -36 V
60 -35 V
60 -35 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -35 V
59 -36 V
60 -35 V
60 -36 V
59 -35 V
60 -35 V
60 -36 V
59 -35 V
60 -36 V
60 -35 V
59 -36 V
60 -35 V
60 -36 V
59 -37 V
60 -40 V
1022 4063 Pls
1082 4032 Pls
1141 4001 Pls
1201 3971 Pls
1261 3940 Pls
1320 3909 Pls
1380 3878 Pls
1440 3847 Pls
1499 3815 Pls
1559 3784 Pls
1619 3753 Pls
1678 3721 Pls
1738 3690 Pls
1798 3658 Pls
1857 3626 Pls
1917 3594 Pls
1977 3562 Pls
2036 3530 Pls
2096 3498 Pls
2156 3466 Pls
2215 3434 Pls
2275 3401 Pls
2335 3369 Pls
2394 3337 Pls
2454 3304 Pls
2514 3271 Pls
2573 3239 Pls
2633 3206 Pls
2693 3173 Pls
2752 3140 Pls
2812 3107 Pls
2872 3074 Pls
2931 3041 Pls
2991 3008 Pls
3051 2974 Pls
3110 2941 Pls
3170 2908 Pls
3230 2874 Pls
3289 2841 Pls
3349 2807 Pls
3409 2774 Pls
3468 2740 Pls
3528 2706 Pls
3588 2672 Pls
3647 2639 Pls
3707 2605 Pls
3767 2571 Pls
3826 2537 Pls
3886 2503 Pls
3946 2469 Pls
4006 2435 Pls
4065 2400 Pls
4125 2366 Pls
4185 2332 Pls
4244 2298 Pls
4304 2263 Pls
4364 2229 Pls
4423 2194 Pls
4483 2160 Pls
4543 2125 Pls
4602 2091 Pls
4662 2056 Pls
4722 2022 Pls
4781 1987 Pls
4841 1952 Pls
4901 1918 Pls
4960 1883 Pls
5020 1848 Pls
5080 1813 Pls
5139 1778 Pls
5199 1743 Pls
5259 1709 Pls
5318 1674 Pls
5378 1639 Pls
5438 1604 Pls
5497 1569 Pls
5557 1533 Pls
5617 1498 Pls
5676 1463 Pls
5736 1428 Pls
5796 1393 Pls
5855 1358 Pls
5915 1323 Pls
5975 1287 Pls
6034 1252 Pls
6094 1217 Pls
6154 1181 Pls
6213 1146 Pls
6273 1111 Pls
6333 1075 Pls
6392 1040 Pls
6452 1005 Pls
6512 969 Pls
6571 934 Pls
6631 898 Pls
6691 863 Pls
6750 827 Pls
6810 792 Pls
6870 756 Pls
6929 721 Pls
6989 685 Pls
1022 4062 Pls
1082 4032 Pls
1141 4002 Pls
1201 3971 Pls
1261 3940 Pls
1320 3909 Pls
1380 3878 Pls
1440 3847 Pls
1499 3816 Pls
1559 3784 Pls
1619 3753 Pls
1678 3721 Pls
1738 3690 Pls
1798 3658 Pls
1857 3626 Pls
1917 3594 Pls
1977 3563 Pls
2036 3531 Pls
2096 3498 Pls
2156 3466 Pls
2215 3434 Pls
2275 3402 Pls
2335 3369 Pls
2394 3337 Pls
2454 3304 Pls
2514 3271 Pls
2573 3239 Pls
2633 3206 Pls
2693 3173 Pls
2752 3140 Pls
2812 3107 Pls
2872 3074 Pls
2931 3041 Pls
2991 3008 Pls
3051 2975 Pls
3110 2941 Pls
3170 2908 Pls
3230 2874 Pls
3289 2841 Pls
3349 2807 Pls
3409 2774 Pls
3468 2740 Pls
3528 2706 Pls
3588 2673 Pls
3647 2639 Pls
3707 2605 Pls
3767 2571 Pls
3826 2537 Pls
3886 2503 Pls
3946 2469 Pls
4006 2435 Pls
4065 2400 Pls
4125 2366 Pls
4185 2332 Pls
4244 2298 Pls
4304 2263 Pls
4364 2229 Pls
4423 2194 Pls
4483 2160 Pls
4543 2126 Pls
4602 2091 Pls
4662 2056 Pls
4722 2022 Pls
4781 1987 Pls
4841 1952 Pls
4901 1918 Pls
4960 1883 Pls
5020 1848 Pls
5080 1813 Pls
5139 1778 Pls
5199 1743 Pls
5259 1709 Pls
5318 1674 Pls
5378 1639 Pls
5438 1604 Pls
5497 1569 Pls
5557 1533 Pls
5617 1498 Pls
5676 1463 Pls
5736 1428 Pls
5796 1393 Pls
5855 1358 Pls
5915 1323 Pls
5975 1287 Pls
6034 1252 Pls
6094 1217 Pls
6154 1181 Pls
6213 1146 Pls
6273 1111 Pls
6333 1075 Pls
6392 1040 Pls
6452 1005 Pls
6512 969 Pls
6571 934 Pls
6631 898 Pls
6691 863 Pls
6750 827 Pls
6810 792 Pls
6870 756 Pls
6929 721 Pls
6989 683 Pls
1022 4059 Pls
1082 4031 Pls
1141 4001 Pls
1201 3972 Pls
1261 3941 Pls
1320 3910 Pls
1380 3879 Pls
1440 3848 Pls
1499 3817 Pls
1559 3786 Pls
1619 3754 Pls
1678 3723 Pls
1738 3691 Pls
1798 3659 Pls
1857 3628 Pls
1917 3596 Pls
1977 3564 Pls
2036 3532 Pls
2096 3500 Pls
2156 3467 Pls
2215 3435 Pls
2275 3403 Pls
2335 3370 Pls
2394 3338 Pls
2454 3305 Pls
2514 3273 Pls
2573 3240 Pls
2633 3207 Pls
2693 3174 Pls
2752 3141 Pls
2812 3108 Pls
2872 3075 Pls
2931 3042 Pls
2991 3009 Pls
3051 2975 Pls
3110 2942 Pls
3170 2909 Pls
3230 2875 Pls
3289 2842 Pls
3349 2808 Pls
3409 2775 Pls
3468 2741 Pls
3528 2707 Pls
3588 2673 Pls
3647 2639 Pls
3707 2606 Pls
3767 2572 Pls
3826 2538 Pls
3886 2504 Pls
3946 2469 Pls
4006 2435 Pls
4065 2401 Pls
4125 2367 Pls
4185 2333 Pls
4244 2298 Pls
4304 2264 Pls
4364 2229 Pls
4423 2195 Pls
4483 2161 Pls
4543 2126 Pls
4602 2091 Pls
4662 2057 Pls
4722 2022 Pls
4781 1987 Pls
4841 1953 Pls
4901 1918 Pls
4960 1883 Pls
5020 1848 Pls
5080 1814 Pls
5139 1779 Pls
5199 1744 Pls
5259 1709 Pls
5318 1674 Pls
5378 1639 Pls
5438 1604 Pls
5497 1569 Pls
5557 1534 Pls
5617 1499 Pls
5676 1463 Pls
5736 1428 Pls
5796 1393 Pls
5855 1358 Pls
5915 1323 Pls
5975 1287 Pls
6034 1252 Pls
6094 1217 Pls
6154 1182 Pls
6213 1146 Pls
6273 1111 Pls
6333 1075 Pls
6392 1040 Pls
6452 1005 Pls
6512 969 Pls
6571 934 Pls
6631 898 Pls
6691 863 Pls
6750 827 Pls
6810 792 Pls
6870 756 Pls
6929 719 Pls
6989 679 Pls
6621 4486 Pls
% End plot #1
1.000 UL
LTb
1022 4619 N
0 -4171 V
5967 0 V
0 4171 V
-5967 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Symbol Helvetica
