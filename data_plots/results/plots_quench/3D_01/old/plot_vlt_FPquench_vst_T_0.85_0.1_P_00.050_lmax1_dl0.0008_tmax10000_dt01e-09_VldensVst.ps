%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_vlt_FPquench_vst_T_0.85_0.1_P_00.050_lmax1_dl0.0008_tmax10000_dt01e-09_VldensVst.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue Feb  1 17:51:52 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_vlt_FPquench_vst_T_0.85_0.1_P_00.050_lmax1_dl0.0008_tmax10000_dt01e-09_VldensVst.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (zero,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb  1 17:51:52 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 588 M
5884 0 V
stroke
LTb
1106 588 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
1.000 UL
LTb
1106 1195 M
31 0 V
5853 0 R
-31 0 V
1106 1550 M
31 0 V
5853 0 R
-31 0 V
1106 1802 M
31 0 V
5853 0 R
-31 0 V
1106 1997 M
31 0 V
5853 0 R
-31 0 V
1106 2157 M
31 0 V
5853 0 R
-31 0 V
1106 2292 M
31 0 V
5853 0 R
-31 0 V
1106 2409 M
31 0 V
5853 0 R
-31 0 V
1106 2512 M
31 0 V
5853 0 R
-31 0 V
stroke
LTa
1106 2604 M
5884 0 V
stroke
LTb
1106 2604 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 2604 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MRshow
1.000 UL
LTb
1106 3211 M
31 0 V
5853 0 R
-31 0 V
1106 3566 M
31 0 V
5853 0 R
-31 0 V
1106 3818 M
31 0 V
5853 0 R
-31 0 V
1106 4013 M
31 0 V
5853 0 R
-31 0 V
1106 4173 M
31 0 V
5853 0 R
-31 0 V
1106 4308 M
31 0 V
5853 0 R
-31 0 V
1106 4425 M
31 0 V
5853 0 R
-31 0 V
1106 4528 M
31 0 V
5853 0 R
-31 0 V
stroke
LTa
1106 4620 M
5884 0 V
stroke
LTb
1106 4620 M
63 0 V
5821 0 R
-63 0 V
stroke
1022 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1106 588 M
0 4032 V
stroke
LTb
1106 588 M
0 63 V
0 3969 R
0 -63 V
stroke
1106 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-09)]
] -46.7 MCshow
1.000 UL
LTb
1359 588 M
0 31 V
0 4001 R
0 -31 V
1694 588 M
0 31 V
0 4001 R
0 -31 V
1865 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
1947 588 M
0 4032 V
stroke
LTb
1947 588 M
0 63 V
0 3969 R
0 -63 V
stroke
1947 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-08)]
] -46.7 MCshow
1.000 UL
LTb
2200 588 M
0 31 V
0 4001 R
0 -31 V
2534 588 M
0 31 V
0 4001 R
0 -31 V
2706 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
2787 588 M
0 4032 V
stroke
LTb
2787 588 M
0 63 V
0 3969 R
0 -63 V
stroke
2787 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-07)]
] -46.7 MCshow
1.000 UL
LTb
3040 588 M
0 31 V
0 4001 R
0 -31 V
3375 588 M
0 31 V
0 4001 R
0 -31 V
3546 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
3628 588 M
0 4032 V
stroke
LTb
3628 588 M
0 63 V
0 3969 R
0 -63 V
stroke
3628 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-06)]
] -46.7 MCshow
1.000 UL
LTb
3881 588 M
0 31 V
0 4001 R
0 -31 V
4215 588 M
0 31 V
0 4001 R
0 -31 V
4387 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
4468 588 M
0 4032 V
stroke
LTb
4468 588 M
0 63 V
0 3969 R
0 -63 V
stroke
4468 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MCshow
1.000 UL
LTb
4721 588 M
0 31 V
0 4001 R
0 -31 V
5056 588 M
0 31 V
0 4001 R
0 -31 V
5227 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
5309 588 M
0 4032 V
stroke
LTb
5309 588 M
0 63 V
0 3969 R
0 -63 V
stroke
5309 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MCshow
1.000 UL
LTb
5562 588 M
0 31 V
0 4001 R
0 -31 V
5896 588 M
0 31 V
0 4001 R
0 -31 V
6068 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
6149 588 M
0 3829 V
0 140 R
0 63 V
stroke
LTb
6149 588 M
0 63 V
0 3969 R
0 -63 V
stroke
6149 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MCshow
1.000 UL
LTb
6402 588 M
0 31 V
0 4001 R
0 -31 V
6737 588 M
0 31 V
0 4001 R
0 -31 V
6909 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
6990 588 M
0 4032 V
stroke
LTb
6990 588 M
0 63 V
0 3969 R
0 -63 V
stroke
6990 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4620 N
0 -4032 V
5884 0 V
0 4032 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2604 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Vortex-Loop Density \(units...\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4048 238 M
[ [(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 140.0 0.0 true true 0 (/)]
[(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 ( \(unitless\))]
] -32.7 MCshow
LTb
4048 4830 M
[ [(Helvetica) 112.0 70.0 true true 0 (4)]
[(Helvetica) 140.0 0.0 true true 0 (He Vortex-Loop Density vs Time )]
[(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 140.0 0.0 true true 0 (/)]
[(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.85 to 0.10)]
] -46.7 MRshow
LT0
6423 4487 M
399 0 V
1106 1397 M
506 0 V
253 1 V
148 1 V
105 1 V
148 1 V
105 2 V
82 1 V
66 0 V
56 1 V
71 1 V
60 1 V
66 2 V
57 1 V
48 1 V
53 1 V
55 2 V
48 1 V
49 2 V
48 1 V
48 2 V
47 1 V
46 2 V
47 2 V
45 2 V
45 2 V
45 3 V
45 2 V
43 2 V
43 3 V
44 3 V
44 3 V
44 3 V
42 3 V
43 4 V
43 3 V
43 4 V
43 4 V
42 4 V
43 5 V
42 5 V
43 5 V
42 5 V
42 6 V
43 6 V
42 7 V
42 6 V
43 7 V
42 8 V
42 8 V
42 8 V
42 9 V
43 10 V
42 10 V
42 10 V
42 11 V
42 12 V
42 13 V
42 13 V
42 14 V
42 14 V
42 16 V
42 16 V
43 18 V
42 18 V
42 19 V
42 21 V
42 21 V
42 23 V
42 24 V
42 25 V
42 27 V
42 29 V
42 29 V
42 32 V
42 33 V
42 36 V
42 37 V
42 39 V
42 42 V
42 44 V
42 47 V
42 50 V
42 52 V
42 56 V
42 59 V
42 63 V
42 66 V
42 72 V
43 76 V
42 81 V
42 87 V
1612 1397 Pls
1865 1398 Pls
2013 1399 Pls
2118 1400 Pls
2266 1401 Pls
2371 1403 Pls
2453 1404 Pls
2519 1404 Pls
2575 1405 Pls
2646 1406 Pls
2706 1407 Pls
2772 1409 Pls
2829 1410 Pls
2877 1411 Pls
2930 1412 Pls
2985 1414 Pls
3033 1415 Pls
3082 1417 Pls
3130 1418 Pls
3178 1420 Pls
3225 1421 Pls
3271 1423 Pls
3318 1425 Pls
3363 1427 Pls
3408 1429 Pls
3453 1432 Pls
3498 1434 Pls
3541 1436 Pls
3584 1439 Pls
3628 1442 Pls
3672 1445 Pls
3716 1448 Pls
3758 1451 Pls
3801 1455 Pls
3844 1458 Pls
3887 1462 Pls
3930 1466 Pls
3972 1470 Pls
4015 1475 Pls
4057 1480 Pls
4100 1485 Pls
4142 1490 Pls
4184 1496 Pls
4227 1502 Pls
4269 1509 Pls
4311 1515 Pls
4354 1522 Pls
4396 1530 Pls
4438 1538 Pls
4480 1546 Pls
4522 1555 Pls
4565 1565 Pls
4607 1575 Pls
4649 1585 Pls
4691 1596 Pls
4733 1608 Pls
4775 1621 Pls
4817 1634 Pls
4859 1648 Pls
4901 1662 Pls
4943 1678 Pls
4985 1694 Pls
5028 1712 Pls
5070 1730 Pls
5112 1749 Pls
5154 1770 Pls
5196 1791 Pls
5238 1814 Pls
5280 1838 Pls
5322 1863 Pls
5364 1890 Pls
5406 1919 Pls
5448 1948 Pls
5490 1980 Pls
5532 2013 Pls
5574 2049 Pls
5616 2086 Pls
5658 2125 Pls
5700 2167 Pls
5742 2211 Pls
5784 2258 Pls
5826 2308 Pls
5868 2360 Pls
5910 2416 Pls
5952 2475 Pls
5994 2538 Pls
6036 2604 Pls
6078 2676 Pls
6121 2752 Pls
6163 2833 Pls
6205 2920 Pls
6622 4487 Pls
1.000 UL
LTb
1106 4620 N
0 -4032 V
5884 0 V
0 4032 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Helvetica
