%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot_vlt_FPquench_vst_T_0.1_P_00.050_lmax10_dl0.008_tmax10000_dt05e-05_RhosRhoVst.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Feb  9 15:46:48 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot_vlt_FPquench_vst_T_0.1_P_00.050_lmax10_dl0.008_tmax10000_dt05e-05_RhosRhoVst.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (zero,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  9 15:46:48 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1358 588 M
5632 0 V
stroke
LTb
1358 588 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 588 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.805e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 955 M
5632 0 V
stroke
LTb
1358 955 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 955 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.81e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 1321 M
5632 0 V
stroke
LTb
1358 1321 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 1321 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.815e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 1688 M
5632 0 V
stroke
LTb
1358 1688 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 1688 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.82e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 2054 M
5632 0 V
stroke
LTb
1358 2054 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 2054 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.825e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 2421 M
5632 0 V
stroke
LTb
1358 2421 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 2421 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.83e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 2787 M
5632 0 V
stroke
LTb
1358 2787 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 2787 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.835e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 3154 M
5632 0 V
stroke
LTb
1358 3154 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 3154 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.84e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 3520 M
5632 0 V
stroke
LTb
1358 3520 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 3520 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.845e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 3887 M
5632 0 V
stroke
LTb
1358 3887 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 3887 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.85e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 4253 M
5632 0 V
stroke
LTb
1358 4253 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 4253 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.855e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 4620 M
5632 0 V
stroke
LTb
1358 4620 M
63 0 V
5569 0 R
-63 0 V
stroke
1274 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5.86e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1358 588 M
0 4032 V
stroke
LTb
1358 588 M
0 63 V
0 3969 R
0 -63 V
stroke
1358 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MCshow
1.000 UL
LTb
1641 588 M
0 31 V
0 4001 R
0 -31 V
2014 588 M
0 31 V
0 4001 R
0 -31 V
2206 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
2297 588 M
0 4032 V
stroke
LTb
2297 588 M
0 63 V
0 3969 R
0 -63 V
stroke
2297 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MCshow
1.000 UL
LTb
2579 588 M
0 31 V
0 4001 R
0 -31 V
2953 588 M
0 31 V
0 4001 R
0 -31 V
3144 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
3235 588 M
0 4032 V
stroke
LTb
3235 588 M
0 63 V
0 3969 R
0 -63 V
stroke
3235 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
1.000 UL
LTb
3518 588 M
0 31 V
0 4001 R
0 -31 V
3891 588 M
0 31 V
0 4001 R
0 -31 V
4083 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
4174 588 M
0 4032 V
stroke
LTb
4174 588 M
0 63 V
0 3969 R
0 -63 V
stroke
4174 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
1.000 UL
LTb
4457 588 M
0 31 V
0 4001 R
0 -31 V
4830 588 M
0 31 V
0 4001 R
0 -31 V
5022 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
5113 588 M
0 3829 V
0 140 R
0 63 V
stroke
LTb
5113 588 M
0 63 V
0 3969 R
0 -63 V
stroke
5113 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
5395 588 M
0 31 V
0 4001 R
0 -31 V
5769 588 M
0 31 V
0 4001 R
0 -31 V
5960 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
6051 588 M
0 3829 V
0 140 R
0 63 V
stroke
LTb
6051 588 M
0 63 V
0 3969 R
0 -63 V
stroke
6051 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
6334 588 M
0 31 V
0 4001 R
0 -31 V
6707 588 M
0 31 V
0 4001 R
0 -31 V
6899 588 M
0 31 V
0 4001 R
0 -31 V
stroke
LTa
6990 588 M
0 4032 V
stroke
LTb
6990 588 M
0 63 V
0 3969 R
0 -63 V
stroke
6990 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1358 4620 N
0 -4032 V
5632 0 V
0 4032 V
-5632 0 V
Z stroke
LCb setrgbcolor
280 2604 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol-Oblique) 140.0 0.0 true true 0 (r)]
[(Helvetica) 112.0 -42.0 true true 0 (s)]
[(Helvetica) 140.0 0.0 true true 0 (/)]
[(Symbol-Oblique) 140.0 0.0 true true 0 (r)]
[(Helvetica) 140.0 0.0 true true 0 ( \(unitless\))]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
4174 238 M
[ [(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 140.0 0.0 true true 0 (/)]
[(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
[(Helvetica) 140.0 0.0 true true 0 ( \(unitless\))]
] -32.7 MCshow
LTb
4174 4830 M
[ [(Helvetica) 112.0 70.0 true true 0 (4)]
[(Helvetica) 140.0 0.0 true true 0 (He Superfluid Fraction )]
[(Symbol-Oblique) 140.0 0.0 true true 0 (r)]
[(Helvetica) 112.0 -42.0 true true 0 (s)]
[(Helvetica) 140.0 0.0 true true 0 (/)]
[(Symbol-Oblique) 140.0 0.0 true true 0 (r)]
[(Helvetica) 140.0 0.0 true true 0 ( vs Time )]
[(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 140.0 0.0 true true 0 (/)]
[(Times-Italic) 140.0 0.0 true true 0 (t)]
[(Helvetica) 112.0 -42.0 true true 0 (0)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4487 M
[ [(Helvetica) 140.0 0.0 true true 0 (Kr/K0, 1.00 to 0.10)]
] -46.7 MRshow
LT0
6423 4487 M
399 0 V
1358 941 M
283 0 V
165 0 V
117 0 V
165 0 V
118 0 V
91 0 V
74 0 V
63 1 V
79 0 V
66 0 V
75 0 V
62 1 V
55 0 V
59 0 V
61 1 V
54 0 V
54 0 V
54 0 V
54 1 V
52 1 V
51 0 V
53 0 V
50 1 V
51 1 V
50 1 V
49 1 V
49 1 V
48 1 V
49 1 V
49 2 V
49 1 V
47 2 V
49 2 V
47 2 V
48 2 V
48 3 V
47 2 V
48 4 V
48 3 V
47 4 V
47 4 V
48 4 V
47 5 V
47 6 V
47 6 V
47 7 V
48 7 V
47 7 V
47 9 V
47 10 V
47 10 V
47 11 V
47 12 V
47 13 V
47 15 V
47 15 V
47 17 V
47 17 V
47 20 V
47 21 V
47 24 V
47 25 V
47 27 V
47 29 V
47 32 V
47 34 V
47 36 V
47 41 V
47 42 V
47 46 V
47 50 V
47 54 V
47 58 V
46 63 V
47 68 V
47 73 V
47 79 V
47 85 V
47 92 V
47 99 V
47 108 V
47 115 V
47 125 V
47 135 V
47 145 V
47 158 V
47 170 V
47 183 V
47 198 V
46 214 V
47 232 V
47 248 V
47 269 V
1358 941 Pls
1641 941 Pls
1806 941 Pls
1923 941 Pls
2088 941 Pls
2206 941 Pls
2297 941 Pls
2371 941 Pls
2434 942 Pls
2513 942 Pls
2579 942 Pls
2654 942 Pls
2716 943 Pls
2771 943 Pls
2830 943 Pls
2891 944 Pls
2945 944 Pls
2999 944 Pls
3053 944 Pls
3107 945 Pls
3159 946 Pls
3210 946 Pls
3263 946 Pls
3313 947 Pls
3364 948 Pls
3414 949 Pls
3463 950 Pls
3512 951 Pls
3560 952 Pls
3609 953 Pls
3658 955 Pls
3707 956 Pls
3754 958 Pls
3803 960 Pls
3850 962 Pls
3898 964 Pls
3946 967 Pls
3993 969 Pls
4041 973 Pls
4089 976 Pls
4136 980 Pls
4183 984 Pls
4231 988 Pls
4278 993 Pls
4325 999 Pls
4372 1005 Pls
4419 1012 Pls
4467 1019 Pls
4514 1026 Pls
4561 1035 Pls
4608 1045 Pls
4655 1055 Pls
4702 1066 Pls
4749 1078 Pls
4796 1091 Pls
4843 1106 Pls
4890 1121 Pls
4937 1138 Pls
4984 1155 Pls
5031 1175 Pls
5078 1196 Pls
5125 1220 Pls
5172 1245 Pls
5219 1272 Pls
5266 1301 Pls
5313 1333 Pls
5360 1367 Pls
5407 1403 Pls
5454 1444 Pls
5501 1486 Pls
5548 1532 Pls
5595 1582 Pls
5642 1636 Pls
5689 1694 Pls
5735 1757 Pls
5782 1825 Pls
5829 1898 Pls
5876 1977 Pls
5923 2062 Pls
5970 2154 Pls
6017 2253 Pls
6064 2361 Pls
6111 2476 Pls
6158 2601 Pls
6205 2736 Pls
6252 2881 Pls
6299 3039 Pls
6346 3209 Pls
6393 3392 Pls
6440 3590 Pls
6486 3804 Pls
6533 4036 Pls
6580 4284 Pls
6627 4553 Pls
6622 4487 Pls
1.000 UL
LTb
1358 4620 N
0 -4032 V
5632 0 V
0 4032 V
-5632 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Symbol Helvetica
